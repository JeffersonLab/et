<?xml version="1.0" ?>

<project name="et"  default="compile" basedir=".">
    
    <!-- Project-wide settings -->

    <!-- environmental variables -->
    <property environment="env"/>

    <!-- Version -->
    <property name="et.version" value="14.0" />

    <!-- Debug -->
    <property name="javac.debug" value="on" />

    <!-- Directories -->
    <property name="src.dir"       value="java" />
    <property name="jars.dir"      value="java/jars" />
    <property name="build.dir"     value="build" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="build.lib"     value="${build.dir}/lib" />
    <property name="doc.dir"       value="doc/javadoc" />

    <property name="jarName"       value="et-${et.version}.jar" />
    <property name="jarPath"       value="${build.lib}/${jarName}" />

    <property name="jlooxName1"    value="jlayout30.jar" />
    <property name="jlooxName2"    value="jlm20.jar" />
    <property name="jlooxName3"    value="jloox20.jar" />
    <property name="jlooxPath1"    value="${jars.dir}/${jlooxName1}" />
    <property name="jlooxPath2"    value="${jars.dir}/${jlooxName2}" />
    <property name="jlooxPath3"    value="${jars.dir}/${jlooxName3}" />

    <!-- Classpath -->
    <path id="classpath">
        <fileset dir="java/jars">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- Targets -->
    
    <!-- Help -->
    <target name="help">
        <echo message="Usage: ant [ant options] &lt;target1&gt; [target2 | target3 | ...]" />
        <echo message="" />
        <echo message="       targets:" />
        <echo message="       help      - print out usage" />
        <echo message="       env       - print out build file variables' values" />
        <echo message="       compile   - compile java files" />
        <echo message="       clean     - remove class files" />
        <echo message="       cleanall  - remove all generated files" />
        <echo message="       jar       - compile and create et jar file" />
        <echo message="       install   - create et jar file and install all jars into 'prefix'" />
        <echo message="                   if given on command line by -Dprefix=dir'," />
        <echo message="                   else install into CODA if defined" />
        <echo message="       uninstall - remove all jar files previously installed into 'prefix'" />
        <echo message="                   if given on command line by -Dprefix=dir'," />
        <echo message="                   else installed into CODA if defined" />
        <echo message="       all       - clean, compile and create et jar file" />
        <echo message="       javadoc   - create javadoc documentation" />
        <echo message="       undoc     - remove all javadoc documentation" />
        <echo message="       prepare   - create necessary directories" />
    </target>

    <!-- Environment -->
    <target name="env">
        <echo message="Ant environment:" />
        <echo message="" />
        <echo message="    src.dir       = ${src.dir}" />
        <echo message="    build.dir     = ${build.dir}" />
        <echo message="    build.lib     = ${build.lib}" />
        <echo message="    build.classes = ${build.classes}" />
        <echo message="    doc.dir       = ${doc.dir}" />
        <echo message="    javac.debug   = ${javac.debug}" />
    </target>

    <!-- Prepare things by creating directories -->
    <target name="prepare">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${build.lib}" />
    </target>

    <!-- Clean by removing class files -->
    <target name="clean" description="Remove all class files">
        <delete failonerror="no" >
            <fileset dir="${build.classes}" includes="**/*.class" />
        </delete>
    </target>

    <!-- Clean by removing build & doc directories -->
    <target name="cleanall" depends="clean" description="Remove all generated files.">
        <delete dir="${build.dir}" failonerror="no" />
        <delete dir="${doc.dir}"   failonerror="no" />
    </target>

    <!-- Compile all source -->
    <target name="compile" depends="prepare" description="Compiles all source code.">
        <javac destdir="${build.classes}" debug="${javac.debug}" optimize="yes" >
            <src path="${src.dir}" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <!-- Create Jar file -->
    <target name="jar" depends="compile" description="Generates jar file.">
        <jar jarfile="${build.lib}/et-${et.version}.jar">
          <!-- Dont include Consumer, Producer, and StartET.class files -->
          <fileset dir="${build.classes}" excludes="*.class" />
        </jar>
    </target>

    <!-- Clean, compile, and create jar -->
    <target name="all" depends="clean,jar" description="Cleans, compile, then builds jar file." />

    <!-- Javadoc -->
    <target name="javadoc" description="Create javadoc.">
        <mkdir dir="${doc.dir}" />
        <javadoc packagenames="org.jlab.coda.et"
                 sourcepath="java"
                 destdir="${doc.dir}"
                 use="true" >
            <classpath refid="classpath" />
        </javadoc>
    </target>

    <!-- Removing Javadoc -->
    <target name="undoc" description="remove all javadoc.">
        <delete dir="${doc.dir}" />
    </target>


    <!-- Install Jar files -->
    <target name="install" depends="jar" description="Installs jar files.">
        <antcall target="-nested-if"/>
    </target>

    <!-- Look for places to install the jar files (simulated if-then-else constructs) -->
    <target name="-nested-if">
        <condition property="prefixDefined">
            <isset property="prefix"/>
        </condition>
        <antcall target="-then"/>
        <antcall target="-else"/>
    </target>

    <target name="-then" if="prefixDefined">
        <echo>Install ${jarName} into ${prefix}</echo>
        <echo>Install ${jlooxName1} into ${prefix}</echo>
        <echo>Install ${jlooxName2} into ${prefix}</echo>
        <echo>Install ${jlooxName3} into ${prefix}</echo>
        <copy file="${jarPath}"    todir="${prefix}/jar"/>
        <copy file="${jlooxPath1}" todir="${prefix}/jar"/>
        <copy file="${jlooxPath2}" todir="${prefix}/jar"/>
        <copy file="${jlooxPath3}" todir="${prefix}/jar"/>
    </target>

    <target name="-else" unless="prefixDefined">
        <echo>Prefix is not defined, so look for CODA environmental variable</echo>
        <condition property="installDirDefined">
            <isset property="env.CODA"/>
        </condition>
        <antcall target="-inner.then"/>
        <antcall target="-inner.else"/>
    </target>

    <target name="-inner.then" if="installDirDefined">
        <echo>Install ${jarName} into ${env.CODA}/common/jar</echo>
        <echo>Install ${jlooxName1} into ${env.CODA}/common/jar</echo>
        <echo>Install ${jlooxName2} into ${env.CODA}/common/jar</echo>
        <echo>Install ${jlooxName3} into ${env.CODA}/common/jar</echo>
        <copy file="${jarPath}"    todir="${env.CODA}/common/jar"/>
        <copy file="${jlooxPath1}" todir="${env.CODA}/common/jar"/>
        <copy file="${jlooxPath2}" todir="${env.CODA}/common/jar"/>
        <copy file="${jlooxPath3}" todir="${env.CODA}/common/jar"/>
    </target>

    <target name="-inner.else" unless="installDirDefined">
        <fail message="CODA environmental variable not defined, jar NOT installed" />
    </target>



    <!-- Uninstall Jar files -->
    <target name="uninstall" description="Uninstalls jar files.">
        <antcall target="-nested-if2"/>
    </target>

    <!-- Look for places to uninstall the jar files (simulated if-then-else constructs) -->
    <target name="-nested-if2">
        <condition property="prefixDefined">
            <isset property="prefix"/>
        </condition>
        <antcall target="-then2"/>
        <antcall target="-else2"/>
    </target>

    <target name="-then2" if="prefixDefined">
        <echo>Remove ${jarName} from ${prefix}</echo>
        <echo>Remove ${jlooxName1} from ${prefix}</echo>
        <echo>Remove ${jlooxName2} from ${prefix}</echo>
        <echo>Remove ${jlooxName3} from ${prefix}</echo>
        <delete file="${prefix}/jar/${jarName}"/>
        <delete file="${prefix}/jar/${jlooxName1}"/>
        <delete file="${prefix}/jar/${jlooxName2}"/>
        <delete file="${prefix}/jar/${jlooxName3}"/>
    </target>

    <target name="-else2" unless="prefixDefined">
        <echo>Prefix is not defined, so look for CODA environmental variable</echo>
        <condition property="installDirDefined">
            <isset property="env.CODA"/>
        </condition>
        <antcall target="-inner.then2"/>
        <antcall target="-inner.else2"/>
    </target>

    <target name="-inner.then2" if="installDirDefined">
        <echo>Remove ${jarName} from ${env.CODA}/common/jar</echo>
        <echo>Remove ${jlooxName1} from ${env.CODA}/common/jar</echo>
        <echo>Remove ${jlooxName2} from ${env.CODA}/common/jar</echo>
        <echo>Remove ${jlooxName3} from ${env.CODA}/common/jar</echo>
        <delete file="${env.CODA}/common/jar/${jarName}"/>
        <delete file="${env.CODA}/common/jar/${jlooxName1}"/>
        <delete file="${env.CODA}/common/jar/${jlooxName2}"/>
        <delete file="${env.CODA}/common/jar/${jlooxName3}"/>
    </target>

    <target name="-inner.else2" unless="installDirDefined">
        <fail message="CODA environmental variable not defined, jar NOT installed" />
    </target>


</project>
