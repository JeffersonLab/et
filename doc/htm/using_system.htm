<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 12">
<meta name=Originator content="Microsoft Word 12">
<link rel=File-List href="using_system_files/filelist.xml">
<link rel=Edit-Time-Data href="using_system_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Using An ET System</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>bangdm</o:Author>
  <o:LastAuthor>Jefferson Lab</o:LastAuthor>
  <o:Revision>43</o:Revision>
  <o:TotalTime>465</o:TotalTime>
  <o:Created>2008-03-17T20:10:00Z</o:Created>
  <o:LastSaved>2011-07-18T16:20:00Z</o:LastSaved>
  <o:Pages>7</o:Pages>
  <o:Words>6388</o:Words>
  <o:Characters>36418</o:Characters>
  <o:Company>Jefferson Science Associates, LLC</o:Company>
  <o:Lines>303</o:Lines>
  <o:Paragraphs>85</o:Paragraphs>
  <o:CharactersWithSpaces>42721</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:RelyOnVML/>
  <o:TargetScreenSize>1152x882</o:TargetScreenSize>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=dataStoreItem href="using_system_files/item0007.xml"
target="using_system_files/props0008.xml">
<link rel=themeData href="using_system_files/themedata.thmx">
<link rel=colorSchemeMapping href="using_system_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>135</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<link rel=Stylesheet type="text/css" media=all href=etmanual.css>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:1627400839 -2147483648 8 0 66047 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.5in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:21.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.25in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:17.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h4
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:14.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h5
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 5 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:13.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;
	font-style:italic;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{mso-style-noshow:yes;
	mso-style-priority:35;
	mso-style-qformat:yes;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Preformatted Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:1.2in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 5";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#243F60;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Preformatted";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Balloon Text";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1043484098;
	mso-list-template-ids:-1769683218;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:1107892047;
	mso-list-template-ids:-911597296;}
@list l1:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1792749619;
	mso-list-template-ids:-1293898172;}
@list l2:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3
	{mso-list-id:2106538688;
	mso-list-template-ids:360640624;}
@list l3:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-qformat:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]-->
<meta name=author content="Carl Timmer">
<meta name=description content="Chapter for ET system manual">
<meta name=copyright content="Copyright 1999, SURA, TJNAF">
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="10242" fillcolor="none [3205]"
  stroke="f" strokecolor="none [3041]">
  <v:fill color="none [3205]" color2="fill lighten(51)" focusposition="1"
   focussize="" method="linear sigma" type="gradient"/>
  <v:stroke color="none [3041]" weight="3pt" on="f"/>
  <v:shadow on="t" type="perspective" color="none [1605]" opacity=".5"
   offset="1pt" offset2="-1pt"/>
  <o:colormru v:ext="edit" colors="#502adc,#8b72e8,#cc84d2,#959ddb,#9d82d4"/>
  <o:colormenu v:ext="edit" fillcolor="none" strokecolor="none [3213]"
   shadowcolor="none"/>
 </o:shapedefaults></xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:rules v:ext="edit">
   <o:r id="V:Rule8" type="connector" idref="#_x0000_s1053"/>
   <o:r id="V:Rule9" type="connector" idref="#_x0000_s1056"/>
   <o:r id="V:Rule10" type="connector" idref="#_x0000_s1052"/>
   <o:r id="V:Rule11" type="connector" idref="#_x0000_s1049"/>
   <o:r id="V:Rule12" type="connector" idref="#_x0000_s1050"/>
   <o:r id="V:Rule13" type="connector" idref="#_x0000_s1055"/>
   <o:r id="V:Rule14" type="connector" idref="#_x0000_s1054"/>
  </o:rules>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white background=FlowBack.gif lang=EN-US link=blue vlink=purple
style='tab-interval:.5in'>
<!--[if gte mso 9]><xml>
 <v:background id="_x0000_s1025" o:bwmode="white">
  <v:fill src="FlowBack.gif" type="tile"/>
 </v:background></xml><![endif]-->

<div class=WordSection1>

<h1><a href="creating_system.htm"><span style='mso-fareast-font-family:"Times New Roman";
mso-no-proof:yes;text-decoration:none;text-underline:none'><img border=0
width=31 height=31 id="_x0000_i1029" src=left.gif alt=Previous></span></a><a
href="programming_details.htm"><span style='mso-fareast-font-family:"Times New Roman";
mso-no-proof:yes;text-decoration:none;text-underline:none'><img border=0
width=31 height=31 id="_x0000_i1028" src=right.gif alt=Next></span></a><span
style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h1>

<h1><span style='mso-fareast-font-family:"Times New Roman"'>Using <span
class=GramE>An</span> ET System<o:p></o:p></span></h1>

<p>In the previous chapter, we learned how to create an ET system, and in this
chapter we'll learn to use an existing system. This chapter shows how users can
attach to ET systems, define, create and remove stations, attach to and detach
from stations, handle events, and handle signals.</p>

<h3><a name=Opening><span style='mso-fareast-font-family:"Times New Roman"'>Opening
an ET System</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>Opening a system is done by calling <i><a href="user_routines.htm#et_open"><span
class=SpellE>et_open</span></a> (et_sys_id* id, char *<span class=SpellE>filename<span
class=GramE>,et</span>_openconfig</span> <span class=SpellE>config</span>)</i>.
The user defines a variable of type <i>et_sys_id</i> and passes its pointer - a
value-result argument - which then gives back an &quot;ID&quot; to the open ET
system. In addition, the filename of an existing ET system and a parameter describing
how the user would like to open the system are passed as parameters to <span
class=SpellE><i>et_open</i></span>.</p>

<p>There are a number of functions used to create and define the <span
class=SpellE><i>config</i></span> argument. It is initialized by a call to <i><a
href="user_routines.htm#et_open_config_init"><span class=SpellE>et_open_config_init</span></a>
(<span class=SpellE>et_openconfig</span> *<span class=SpellE>config</span>)</i>.
When the user is finished using the configuration, <i><a
href="user_routines.htm#et_open_config_destroy"><span class=SpellE>et_open_config_destroy</span></a>
(<span class=SpellE>et_openconfig</span> <span class=SpellE>config</span>)</i>
must be called in order to properly release all memory used.</p>

<p>After initialization, calls can be made to functions which set various
properties of the specific configuration. Calls to these setting functions will
fail unless the configuration is first initialized. The functions used to SET
these properties are listed below along with an explanation for each:</p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setwait"><span class=SpellE>et_open_config_setwait</span></a>(<span
class=SpellE>et_openconfig</span> <span class=SpellE>config</span>, int <span
class=SpellE>val</span>)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: setting <span class=SpellE><em>val</em></span> to ET_OPEN_WAIT makes <span
class=SpellE><em>et_open</em></span> block by waiting until the given ET system
is fully functioning or a set time period has passed before returning. Setting <span
class=SpellE><span class=GramE><em>val</em></span></span> to ET_OPEN_NOWAIT
make <span class=SpellE>et_open</span> return immediately after determining
whether the ET system is alive or not. If the system is remote, then
broadcasting to find its location may take up to several seconds. The default
is ET_OPEN_NOWAIT.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_settimeout"><span class=SpellE>et_open_config_<span
class=GramE>settimeout</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, <span class=SpellE>struct</span> <span
class=SpellE>timespec</span> <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : in ET_OPEN_WAIT mode, this
function sets the maximum amount of time to wait for an alive ET system to
appear. If the time is set to zero (the default), an infinite time is
indicated. If broad/multicasting to find a remote ET system, it is possible to
take up to several seconds to determine whether the system is alive or not --
possible exceeding the time limit.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_sethost"><span class=SpellE>et_open_config_<span
class=GramE>sethost</span></span></a>(<span class=SpellE>et_openconfig</span> <span
class=SpellE>config</span>, char *<span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the name of the
host (or computer) on which the ET system resides. For opening a local system
only, set <span class=SpellE><span class=GramE><em>val</em></span></span> to
ET_HOST_LOCAL (the default) or &quot;<span class=SpellE>localhost</span>&quot;
(including quotes). For opening a system on an unknown remote computer only,
set it to ET_HOST_REMOTE. For an unknown host which may be local or remote, set
it to ET_HOST_ANYWHERE. Otherwise set <span class=SpellE><span class=GramE><em>val</em></span></span>
to the name or dotted-decimal IP address of the desired host. (See next routine
also).<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setcast"><span class=SpellE>et_open_config_<span
class=GramE>setcast</span></span></a>(<span class=SpellE>et_openconfig</span> <span
class=SpellE>config</span>, int <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : setting <span
class=SpellE><em>val</em></span> to ET_BROADCAST (default) means using UDP
broadcast IP packets to determine the location of ET systems so they can be
opened. Setting <span class=SpellE><span class=GramE><em>val</em></span></span>
to ET_MULTICAST uses the newer UDP multicast IP packets to do the same. Setting
<span class=SpellE><span class=GramE><em>val</em></span></span> to
ET_BROADANDMULTICAST does both. However setting <span class=SpellE><span
class=GramE><em>val</em></span></span> to ET_DIRECT makes a direct connection
to the ET system and requires that <span class=SpellE><em>et_open_config_sethost</em></span>
use the actual host's name or &quot;<span class=SpellE>localhost</span>&quot;
and not ET_HOST_LOCAL, ET_HOST_REMOTE, or ET_HOST_ANYWHERE. The <span
class=SpellE>tcp</span> port number used in the direct connection is set by <span
class=SpellE><em>et_open_config_setserverport</em></span> and defaults to
ET_SERVER_PORT, defined in <span class=SpellE><em>et.h</em></span> as 11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setTTL"><span class=SpellE>et_open_config_<span
class=GramE>setTTL</span></span></a>(<span class=SpellE>et_openconfig</span> <span
class=SpellE>config</span>, int <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : when using multicasting,
set the TTL value. This sets the number of routers to hop. The default is one
which keeps things on the subnet.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setport"><span class=SpellE>et_open_config_<span
class=GramE>setport</span></span></a>(<span class=SpellE>et_openconfig</span> <span
class=SpellE>config</span>, unsigned short <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the port number
of the UDP broadcast communications. The default is ET_BROADCAST_PORT, defined
in <span class=SpellE><em>et.h</em></span> as 11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setmultiport"><span class=SpellE>et_open_config_<span
class=GramE>setmultiport</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, unsigned short <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the port number
of the UDP multicast communications. The default is ET_MULTICAST_PORT, defined
in <span class=SpellE><em>et.h</em></span> as 11111. It will be necessary to
use this routine when opening a Java-based ET system as broadcast and multicast
ports must be different.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setport"><span class=SpellE>et_open_config_<span
class=GramE>setserverport</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, unsigned short <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the port number
of the <span class=SpellE>tcp</span> server thread of an ET system. The default
is ET_SERVER_PORT, defined in <span class=SpellE><em>et.h</em></span> as 11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_addbroadcast"><span class=SpellE>et_open_config_<span
class=GramE>addbroadcast</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, char *<span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this adds an IP subnet
broadcast address to a list of destinations used in broadcast discovery of the
ET system to be opened. The <span class=SpellE><span class=GramE><em>val</em></span></span>
argument may also be set to ET_SUBNET_ALL which specifies all the local subnet
broadcast addresses. Format is dotted-decimal only. Broadcasting is only used
if <span class=SpellE><i style='mso-bidi-font-style:normal'>et_open_config_setcast</i></span>
is set to ET_BROADCAST or ET_BROADANDMULTICAST.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_removebroadcast"><span class=SpellE>et_open_config_<span
class=GramE>removebroadcast</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, char *<span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this removes an IP subnet
broadcast address from a list of destinations used in broadcast discovery of
the ET system to be opened. If there is no such address on the list, it is
ignored. The <span class=SpellE><span class=GramE><em>val</em></span></span>
argument may also be set to ET_SUBNET_ALL which removes all the subnet
broadcast addresses (empties the list). Dotted-decimal only.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_addmulticast"><span class=SpellE>et_open_config_<span
class=GramE>addmulticast</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, char *<span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this adds a multicast
address to a list of destinations used in multicast discovery of the ET system
to be opened. There can be at most ET_MAXADDRESSES (defined in <span
class=SpellE><em>et_private.h</em></span> as 10) addresses on the list.
Duplicate entries are not added to the list. Format is dotted-decimal.
Multicasting is only used if <span class=SpellE><i style='mso-bidi-font-style:
normal'>et_open_config_setcast</i></span> is set to ET_MULTICAST or
ET_BROADANDMULTICAST.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_removemulticast"><span class=SpellE>et_open_config_<span
class=GramE>removemulticast</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, char *<span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> :&nbsp; this removes a
multicast address from a list of destinations used in multicast discovery of
the ET system to be opened. If there is no such address on the list, it is
ignored. Dotted-decimal.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>13.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setpolicy"><span class=SpellE>et_open_config_<span
class=GramE>setpolicy</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, int <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the return
policy from an <span class=SpellE><em>et_open</em></span> call so that if <span
class=SpellE><em>et_open</em></span> generates more than one response from one
or more ET systems, different things can be done. Setting <span class=SpellE><em>val</em></span>
to ET_POLICY_ERROR returns an error, ET_POLICY_FIRST opens the first responding
system, and ET_POLICY_LOCAL opens the first responding local system if there is
one, and if not, the first responding system.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>14.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setmode"><span class=SpellE>et_open_config_setmode</span></a>(<span
class=SpellE>et_openconfig</span> <span class=SpellE>config</span>, int <span
class=SpellE>val</span>)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: setting <span class=SpellE><em>val</em></span> to ET_HOST_AS_LOCAL (default)
means users which are on the same machine as the ET system (local) will realize
this and take advantage of it. However, setting <span class=SpellE><span
class=GramE><em>val</em></span></span> to ET_HOST_AS_REMOTE means users will be
treated as if they were remote even if they are local. All transactions will be
through the ET system's server and not through shared memory.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>15.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setdebugdefault"><span class=SpellE>et_open_config_<span
class=GramE>setdebugdefault</span></span></a>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, int <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the default
level of debugging output. Set <span class=SpellE><span class=GramE><em>val</em></span></span>
to: ET_DEBUG_NONE for no output, ET_DEBUG_SEVERE for output describing severe
errors, ET_DEBUG_ERROR for output describing all errors, ET_DEBUG_WARN for
output describing warnings and errors, and ET_DEBUG_INFO for output describing
all information, warnings, and errors.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>16.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman";font-style:normal;mso-bidi-font-style:
italic'><a href="user_routines.htm#et_open_config_setinterface"><span
class=SpellE><i style='mso-bidi-font-style:normal'>et_open_config_<span
class=GramE>setinterface</span></i></span></a></span></em><em><span
style='mso-fareast-font-family:"Times New Roman"'>(<span class=SpellE>et_openconfig</span>
<span class=SpellE>config</span>, int <span class=SpellE>val</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this sets the network
interface to use in order to communicate with the ET system (if not local and
mode is not ET_HOST_AS_REMOTE). Set <span class=SpellE><span class=GramE><em>val</em></span></span>
to the dotted decimal form of the IP address of the interface desired.<o:p></o:p></span></p>

<p>More on remote ET systems can be found in the chapter entitled <a
href="remote_et.htm">Remote ET</a>. All of the above &quot;set&quot; functions
have their counterpart &quot;get&quot; functions as well.</p>

<p>Once an ET system has been opened, users can use the id as a handle for that
particular system. Users can open more than one system at a time, referring to
each by their respective handles.</p>

<h3><a name=What><span style='mso-fareast-font-family:"Times New Roman"'>What
are Stations?<o:p></o:p></span></a></h3>

<span style='mso-bookmark:What'></span>

<p>Stations are places in shared memory containing 2 lists of events &#8211;
the input and output lists. Users can grab events from the input list for
processing and when put back to the ET system, those events go to the
station&#8217;s output list. From the output list, the station&#8217;s
conductor thread will move the events to other stations further down the line.
In the following diagram, the arrows represent the conductor threads.
GRAND_CENTRAL is the first station, exists in all ET systems, and its input
list contains all the unused events. Users usually grab unused events from this
station, put their data into them, and put them back. In this way all stations
further down the line will eventually get a chance to process them.</p>

<p><span style='mso-no-proof:yes'><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="Diagram_x0020_5" o:spid="_x0000_i1027" type="#_x0000_t75"
 style='width:6in;height:252pt;visibility:visible' o:gfxdata="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
bWxQSwUGAAAAAAoACgCbAgAAJygAAAAA
">
 <v:imagedata src="using_system_files/image002.png" o:title="" cropbottom="-130f"
  cropleft="-23136f" cropright="-23253f"/>
 <o:lock v:ext="edit" aspectratio="f"/>
</v:shape></span></p>

<p>Stations can be blocking or non-blocking. Blocking stations receive <b
style='mso-bidi-font-weight:normal'>all</b> events from the previous station(s)
and its input and output lists (or queues) are large enough to contain all
events of the ET system. Non-blocking stations, on the other hand, have
settable input queue sizes. Once the input queue is full, all other events
flowing through the system will bypass the station and go to the next one in line.
Setting the queue size large enough to contain all events will have the effect
of making non-blocking stations behave as those that block.</p>

<p>Stations normally exist in a serial flow of events &#8211; that is, the user
puts events back into a station, the events flow to the next in a serial line
of stations until they eventually reach GRAND_CENTRAL where they are reused.
However, stations can be grouped together to act as a unit when all stations in
the unit are declared to have parallel event flow. In the diagram below, P1,
P2, and P3 are parallel stations with P1 being the head. In addition to normal
distribution methods, S1&#8217;s conductor can distribute its events to the
parallel stations with 2 special algorithms. One is a round robin algorithm
(which is self-explanatory) and the other is an equal-queue algorithm in which
the conductor tries to keep the input queues of P1, P2, &amp; P3 equally full
for load balancing. When events are put back into a parallel station, its
conductor will place them into the next appropriate serial or head parallel
station.</p>

<p><v:shapetype id="_x0000_t32" coordsize="21600,21600" o:spt="32" o:oned="t"
 path="m,l21600,21600e" filled="f">
 <v:path arrowok="t" fillok="f" o:connecttype="none"/>
 <o:lock v:ext="edit" shapetype="t"/>
</v:shapetype><v:shape id="_x0000_s1049" type="#_x0000_t32" style='position:absolute;
 left:0;text-align:left;margin-left:184.4pt;margin-top:58.1pt;width:105.3pt;
 height:39pt;flip:y;z-index:1' o:connectortype="straight" stroked="f"
 strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
 <v:stroke endarrow="block"/>
 <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
  offset="1pt" offset2="-1pt"/>
</v:shape><v:group id="_x0000_s1057" style='position:absolute;left:0;
 text-align:left;margin-left:150.65pt;margin-top:14.05pt;width:348.8pt;
 height:226.1pt;z-index:2' coordorigin="3124,11785" coordsize="6976,4522">
 <v:group id="_x0000_s1038" style='position:absolute;left:3124;top:13286;
  width:1562;height:1385' coordorigin="3124,13286" coordsize="1562,1385">
  <v:oval id="_x0000_s1032" style='position:absolute;left:3124;top:13286;
   width:1385;height:1385' fillcolor="#c0504d [3205]" stroked="f"
   strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox style='mso-next-textbox:#_x0000_s1032'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><o:p>&nbsp;</o:p></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:oval><v:shapetype id="_x0000_t202" coordsize="21600,21600" o:spt="202"
   path="m,l,21600r21600,l21600,xe">
   <v:stroke joinstyle="miter"/>
   <v:path gradientshapeok="t" o:connecttype="rect"/>
  </v:shapetype><v:shape id="_x0000_s1037" type="#_x0000_t202" style='position:absolute;
   left:3124;top:13769;width:1562;height:421' filled="f" fillcolor="white [3212]"
   stroked="f" strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span style='font-family:"Arial","sans-serif";
      color:white;mso-themecolor:background1'>Station S1<o:p></o:p></span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape></v:group><v:group id="_x0000_s1046" style='position:absolute;
  left:5901;top:11785;width:1562;height:1385' coordorigin="5901,11785"
  coordsize="1562,1385">
  <v:oval id="_x0000_s1034" style='position:absolute;left:5902;top:11785;
   width:1385;height:1385' fillcolor="#959ddb" stroked="f" strokecolor="#f2f2f2 [3041]"
   strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
  </v:oval><v:shape id="_x0000_s1041" type="#_x0000_t202" style='position:absolute;
   left:5901;top:12253;width:1562;height:421' o:regroupid="1" filled="f"
   fillcolor="white [3212]" stroked="f" strokecolor="#f2f2f2 [3041]"
   strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox style='mso-next-textbox:#_x0000_s1041'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span style='font-family:"Arial","sans-serif";
      color:white;mso-themecolor:background1'>Station P1<o:p></o:p></span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape></v:group><v:group id="_x0000_s1047" style='position:absolute;
  left:5901;top:13353;width:1563;height:1385' coordorigin="5901,13353"
  coordsize="1563,1385">
  <v:oval id="_x0000_s1035" style='position:absolute;left:5901;top:13353;
   width:1385;height:1385' fillcolor="#9d82d4" stroked="f" strokecolor="#f2f2f2 [3041]"
   strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
  </v:oval><v:shape id="_x0000_s1042" type="#_x0000_t202" style='position:absolute;
   left:5902;top:13829;width:1562;height:421' filled="f" fillcolor="white [3212]"
   stroked="f" strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox style='mso-next-textbox:#_x0000_s1042'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span style='font-family:"Arial","sans-serif";
      color:white;mso-themecolor:background1'>Station P2<o:p></o:p></span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape></v:group><v:group id="_x0000_s1048" style='position:absolute;
  left:5902;top:14922;width:1565;height:1385' coordorigin="5902,14922"
  coordsize="1565,1385">
  <v:oval id="_x0000_s1036" style='position:absolute;left:5902;top:14922;
   width:1385;height:1385' fillcolor="#8b72e8" stroked="f" strokecolor="#f2f2f2 [3041]"
   strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
  </v:oval><v:shape id="_x0000_s1043" type="#_x0000_t202" style='position:absolute;
   left:5905;top:15434;width:1562;height:421' filled="f" fillcolor="white [3212]"
   stroked="f" strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox style='mso-next-textbox:#_x0000_s1043'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span style='font-family:"Arial","sans-serif";
      color:white;mso-themecolor:background1'>Station P3<o:p></o:p></span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape></v:group><v:group id="_x0000_s1045" style='position:absolute;
  left:8538;top:13286;width:1562;height:1385' coordorigin="8538,13286"
  coordsize="1562,1385">
  <v:oval id="_x0000_s1033" style='position:absolute;left:8546;top:13286;
   width:1385;height:1385' fillcolor="#9bbb59 [3206]" stroked="f"
   strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
  </v:oval><v:shape id="_x0000_s1044" type="#_x0000_t202" style='position:absolute;
   left:8538;top:13770;width:1562;height:421' filled="f" fillcolor="white [3212]"
   stroked="f" strokecolor="#f2f2f2 [3041]" strokeweight="3pt">
   <v:shadow on="t" type="perspective" color="#622423 [1605]" opacity=".5"
    offset="1pt" offset2="-1pt"/>
   <v:textbox style='mso-next-textbox:#_x0000_s1044'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span style='font-family:"Arial","sans-serif";
      color:white;mso-themecolor:background1'>Station S2<o:p></o:p></span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape></v:group><v:shape id="_x0000_s1050" type="#_x0000_t32" style='position:absolute;
  left:4509;top:12508;width:1396;height:1508;flip:y' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape><v:shape id="_x0000_s1052" type="#_x0000_t32" style='position:absolute;
  left:4509;top:14016;width:1392;height:1;flip:y' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape><v:shape id="_x0000_s1053" type="#_x0000_t32" style='position:absolute;
  left:4509;top:14018;width:1392;height:1612' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape><v:shape id="_x0000_s1054" type="#_x0000_t32" style='position:absolute;
  left:7286;top:14016;width:1252;height:0' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape><v:shape id="_x0000_s1055" type="#_x0000_t32" style='position:absolute;
  left:7287;top:12510;width:1251;height:1444' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape><v:shape id="_x0000_s1056" type="#_x0000_t32" style='position:absolute;
  left:7287;top:14123;width:1251;height:1507;flip:y' o:connectortype="straight"
  strokecolor="black [3213]" strokeweight=".25pt">
  <v:stroke endarrow="block"/>
  <v:shadow type="perspective" color="#622423 [1605]" opacity=".5" offset="1pt,3pt"
   offset2="-1pt,2pt"/>
 </v:shape></v:group><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></h3>

<br style='mso-ignore:vglayout' clear=ALL>

<h3><a name=Definition><span style='mso-fareast-font-family:"Times New Roman"'>Definition
of Stations</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Definition<o:p></o:p></span></h4>

<p>Analogous to the opening or creation of ET systems, users begin by declaring
a variable of type <span class=SpellE><em>et_statconfig</em></span>. Once this
variable is declared, it must be initialized before further use. Thus users
must also call the function <em><a
href="user_routines.htm#et_station_config_init"><span class=SpellE>et_station_config_<span
class=GramE>init</span></span></a>(<span class=SpellE>et_statconfig</span>* <span
class=SpellE>sconfig</span>)</em>. After initialization, calls can be made to
functions which set various properties of the specific configuration. Calls to
these setting functions will fail unless the configuration is first
initialized.</p>

<p>When the user is finished using a configuration variable, the user must call
<em><a href="user_routines.htm#et_station_config_destroy"><span class=SpellE>et_station_config_<span
class=GramE>destroy</span></span></a>(<span class=SpellE>et_statconfig</span> <span
class=SpellE>sconfig</span>)</em> with the configuration as an argument in
order to properly release all memory used.</p>

<p>The functions used to SET station parameters are listed below along with an
explanation for each: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setblock"><span class=SpellE><em>et_station_config_setblock</em></span></a>(<span
class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>, int <span
class=SpellE>val</span>) : setting <span class=SpellE><em>val</em></span> to
ET_STATION_BLOCKING makes the station block by looking at all events in the
system, while setting it to ET_STATION_NONBLOCKING allows the station to fill
up a cue of events and when that is full, events flow to the next station
downstream. The default is blocking.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
class=SpellE><em><u><span style='mso-fareast-font-family:"Times New Roman";
color:blue'>et_station_config_setflow</span></u></em></span><span
style='mso-fareast-font-family:"Times New Roman"'>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, int <span class=SpellE>val</span>) setting <span
class=SpellE><em>val</em></span> to ET_STATION_SERIAL makes events flow through
the station normally, while setting it to ET_STATION_PARALLEL can make the
station part of a group of stations through which events flow in parallel
downstream. The default is serial.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setcue"><span class=SpellE><em>et_station_config_setcue</em></span></a>(<span
class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>, int <span
class=SpellE>val</span>) : when in non-blocking mode, this sets the maximum
number of events that are to be in the station's input list ready for reading
(in so far as it is possible). The default is 10.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setprescale"><span class=SpellE><em>et_station_config_<span
class=GramE>setprescale</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, int <span class=SpellE>val</span>) : when in
blocking mode, every Nth event of interest is sent to the user by setting the <span
class=SpellE><em>val</em></span> to N. The default is 1.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setuser"><span class=SpellE><em>et_station_config_setuser</em></span></a>(<span
class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>, int <span
class=SpellE>val</span>) : setting <span class=SpellE><em>val</em></span> to
ET_STATION_USER_SINGLE allows only one user process to attach to this station,
while setting it to ET_STATION_USER_MULTI allows multiple users to attach.
Setting it to a positive integer allows only that number of attachments to the
station. The default is multiuser.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setrestore"><span class=SpellE><em>et_station_config_setrestore</em></span></a>(<span
class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>, int <span
class=SpellE>val</span>) : when a process dies or detaches from a station, the
events it read but did not write are recovered and sent to a station's output
list if <span class=SpellE><em>val</em></span> is set to
ET_STATION_RESTORE_OUT. Similarly, they can be sent to the input list with
ET_STATION_RESTORE_IN or back to GRAND_CENTRAL station with
ET_STATION_RESTORE_GC. Finally, if <span class=SpellE>val</span> is
ET_STATION_RESTORE_REDIST and if the station has parallel flow<span
class=GramE>,<span style='mso-spacerun:yes'>&nbsp; </span>the</span> events can
be sent to the output list of the previous station in which case these events
will be redistributed to the group of parallel stations. This final option is
useful, for example, in a processing farm of parallel stations. If a farm node
(and its accompanying attachments) disappears, all the events that were written
to it can be automatically redistributed to other farm nodes. The default is
restoration to the output list.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setselect"><span class=SpellE><em>et_station_config_<span
class=GramE>setselect</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, int <span class=SpellE>val</span>) : for
selection of all events and no filtering set <span class=SpellE><em>val</em></span>
to ET_STATION_SELECT_ALL. For selection using a user-defined routine loaded
through a shared library set it to ET_STATION_SELECT_USER. The
ET_STATION_SELECT_MATCH option takes an event's array of control integers and
does a comparison with the station's selection integers or words. The results
of all logical comparisons are <span class=SpellE>ORed</span> together. An
event is selected if result = 1. This may seem strange but is a holdover from
the DD system which was a precursor to the ET system and can occasionally be
useful. For parallel station there are 2 more possibilities.
ET_STATION_SELECT_RROBIN distributes events to a group of parallel stations
with a round robin algorithm. ET_STATION_SELECT_EQUALCUE distributes events so
that the input queues of each parallel station will be kept the equally full
(as much as possible). See below for more details. The default mode is
ET_STATION_SELECT_ALL.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setselectwords"><span class=SpellE><em>et_station_config_<span
class=GramE>setselectwords</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, int *<span class=SpellE>val</span>) : the
argument is an array of integers used when the station select mode is set to
ET_STATION_SELECT_MATCH or possibly ET_STATION_SELECT_USER (depending on what
algorithm a user-defined, event selection routine uses). For DD users, it is
identical to the old &quot;p2ctl&quot; element of the old &quot;<span
class=SpellE>fmode</span>&quot; structure. The default is to set all integers
to a value of &quot;-1&quot;.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setlib"><span class=SpellE><em>et_station_config_<span
class=GramE>setlib</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, char *<span class=SpellE>val</span>) : for a
select mode of ET_STATION_SELECT_USER, <span class=SpellE><em>val</em></span>
is the name of the shared library containing the function to be used for
selecting events.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setfunction"><span class=SpellE><em>et_station_config_<span
class=GramE>setfunction</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, char *<span class=SpellE>val</span>) : for a
select mode of ET_STATION_SELECT_USER, <span class=SpellE><em>val</em></span>
is the name of the function to be used for selecting events.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setclass"><span class=SpellE><em>et_station_config_<span
class=GramE>setclass</span></em></span></a>(<span class=SpellE>et_statconfig</span>
<span class=SpellE>sconfig</span>, char *<span class=SpellE>val</span>) : when
defining a station on a Java-based ET system with a select mode of
ET_STATION_SELECT_USER, <span class=SpellE><em>val</em></span> is the name of
the class containing the method to be used for selecting events.<o:p></o:p></span></p>

<p><span class=GramE>Just a few notes on some of the details.</span> When
selecting the ET_STATION_RESTORE_IN/REDIST modes for event restoration, be
aware of a few things. If there is only one process attached to such a station
and it dies, the events go to the output list in order to prevent them from
being lost to a station with no event readers. If there is more than one
process attached and one dies, its events will be put into the input list or
the previous station&#8217;s output list with the assumption that the recovered
events are higher in priority to those already in the station's input list. To
be exact, the recovered high priority events are placed &quot;above&quot;
(sooner to be read) all other <span class=GramE>events,</span> and the
recovered low priority events are placed below high priority but above all
other low priority events. There are no guarantees that the recovered events
will be in their original order.</p>

<p>The mode denoted by ET_STATION_SELECT_MATCH has the following behavior. A
check is made to see if the first element of the station's selection array is
equal to -1. If it is, then the first element of the event's control array is
ignored and the event is not marked for selection. Similar comparisons continue
for each element of the arrays. Thus, if all elements of a station's selection
array are set to -1, the event will NOT be selected. If the first element of
the station's selection array is not -1 but is equal to the first element of
the event's control array, then the event is selected. If the bitwise AND
(&amp;) of the station's and event's second elements is true, then the event is
selected. This pattern is repeated with the even elements 0<span class=GramE>,2,4</span>,
6, ... compared for equality and the odd elements 1, 3, 5, ... compared for
bitwise AND. If any of the comparisons are true, then the event is selected.
This is the logic employed by the old DD system in its &quot;conditional&quot;
mode.</p>

<p>Similar functions to those mentioned above are available to GET the values
associated with a station configuration.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Examples<o:p></o:p></span></h4>

<p>Since one of the more difficult tasks facing the first time user is how to
properly configure a station, let's look at two examples first:</p>

<p><code><span style='font-size:10.0pt'>/* declarations */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_stat_config</span></code></span><code><span
style='font-size:7.5pt'> <span class=SpellE>sconfig</span>;</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>/* set values */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_init</span></code></span><code><span
style='font-size:7.5pt'>(&amp;<span class=SpellE>sconfig</span>);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setselect</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_SELECT_ALL);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setblock</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_NONBLOCKING);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setuser</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_USER_SINGLE);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setrestore</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_RESTORE_GC);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setcue</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>, 20);</span></code></p>

<p>Here is a station to which only 1 user may attach. It accepts all events no
matter what values the selection integers have. It is non-blocking, meaning
that once the system fills up its input list with a maximum of 20 <span
class=GramE>events,</span> all other events will bypass the station and be
placed somewhere downstream. If the user process should die, the events that it
owns will be placed back in GRAND_CENTRAL station, and no one else will get
them.</p>

<p>A more complicated example can be seen below:<br>
&nbsp;<br>
<code><span style='font-size:10.0pt'>/* declarations */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>int selections[] = {17,22,-1,-1};</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_stat_config</span></code></span><code><span
style='font-size:7.5pt'> <span class=SpellE>sconfig</span>;</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>/* set values */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_init</span></code></span><code><span
style='font-size:7.5pt'>(&amp;<span class=SpellE>sconfig</span>);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setselect</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_SELECT_ALL);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setblock</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_BLOCKING);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setuser</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_USER_MULTI);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setrestore</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_RESTORE_IN);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setprescale</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>, 5);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setselect</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>,
ET_STATION_SELECT_USER);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><span class=SpellE><code><span style='font-size:7.5pt'>et_station_config_setselectwords</span></code></span><code><span
style='font-size:7.5pt'>(<span class=SpellE>sconfig</span>, selections);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>if (<span class=SpellE>et_station_config_setlib</span>(<span
class=SpellE>sconfig</span>, &quot;/stuff/libet_user.so&quot;) == ET_ERROR) {</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>&nbsp; <span class=SpellE>printf</span>(&quot;
cannot set library\n&quot;);</span></code><span style='font-size:10.0pt;
font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>}</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>if (<span class=SpellE>et_station_config_setfunction</span>(<span
class=SpellE>sconfig</span>, &quot;<span class=SpellE>et_my_function</span>&quot;)
== ET_ERROR) {</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>&nbsp; <span class=SpellE>printf</span>(&quot;cannot
set function\n&quot;);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>}</span></code></p>

<p>In the above example, there is a station to which multiple users can attach.
Its select mode (ET_STATION_SELECT_USER) says that the user will be supplying a
function in a shared library to determine which events are to be selected.
Since this station is set to block events, all events which meet its selection
criteria are placed in its input list, even if it means slowing the whole ET
system down to a crawl. Actually, the <span class=SpellE>prescale</span> factor
imposes an additional selection criterion since it is in blocking mode. Thus,
only every 5th event which passes through the user's filter gets placed in the
station's input list. Its restore mode says that if this user process should
ever die, the events that it currently owns will be placed in the station's
input list. </p>

<h3><a name=Creation><span style='mso-fareast-font-family:"Times New Roman"'>Creation
&amp; Removal of Stations</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>Once a configuration is defined, it is passed to the function <em><a
href="user_routines.htm#et_station_create"><span class=SpellE>et_station_<span
class=GramE>create</span></span></a>(et_sys_id id, <span class=SpellE>et_stat_id</span>
*<span class=SpellE>stat_id</span>, char *<span class=SpellE>stat_name</span>, <span
class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>)</em>. In
addition to the arguments, <em>id</em> and <span class=SpellE><em>sconfig</em></span>,
which have already been covered, the user must supply a unique name and is
returned a station identification number <span class=SpellE><em>stat_id</em></span>.
This station id is used in other station-related routines.</p>

<p>A more detailed version of the above function is <i style='mso-bidi-font-style:
normal'><a href="user_routines.htm#et_station_create_at"><span class=SpellE>et_station_create_<span
class=GramE>at</span></span></a>(et_sys_id id, <span class=SpellE>et_stat_id</span>
*<span class=SpellE>stat_id</span>, const char *<span class=SpellE>stat_name</span>,
<span class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>, int
position, int <span class=SpellE>parallelposition</span></i>. Position refers
to the position in the list of stations (starting with GRAND_CENTRAL) in which
to place the new station. If adding at the end, use the value ET_END for
position. Note that the value of position is found by counting a single group
of parallel stations as one. If adding the first parallel station of a group of
parallel stations, set <span class=SpellE>parallelposition</span> to ET_HEAD
since it will be the new head of this group. Once the head parallel station is
created, the <span class=SpellE>parallelposition</span> of additional parallel
stations must be &gt;= 1 or ET_END.</p>

<p>Possible errors returned by the function <span class=SpellE><em>et_station_create</em></span>
are ET_ERROR_EXISTS if a station by that name <span class=GramE>exists</span>
already, ET_ERROR_TOOMANY if the user is the second user to try to attach to a
station designated for one user only, or ET_ERROR for other unrecoverable
errors such as bad positions. If the user is a remote consumer, the error
ET_ERROR_REMOTE indicates a bad <span class=SpellE>arg</span> or not being able
to allocate memory, and ET_ERROR_READ &amp; ET_ERROR_WRITE indicate problems
with the network communication.</p>

<p>Removing stations can be accomplished by calling <em><a
href="user_routines.htm#et_station_remove"><span class=SpellE>et_station_<span
class=GramE>remove</span></span></a>(et_sys_id id, <span class=SpellE>et_stat_id</span>
<span class=SpellE>stat_id</span>)</em>.</p>

<h3><a name=Attaching><span style='mso-fareast-font-family:"Times New Roman"'>Attaching
to and Detaching from Stations</span></a><span style='mso-fareast-font-family:
"Times New Roman"'><o:p></o:p></span></h3>

<p>Until a user's process attaches to a station, the station is placed in an
idle mode, meaning, that it is not participating in the flow of events - it is
getting by-passed. Once a process attaches to a station, it becomes active and
begins to receive events. This logic ensures that events do not get stuck in
stations with no one to process them or that the entire flow of events does not
come to a grinding halt.</p>

<p>Attach to a station by calling <em><a
href="user_routines.htm#et_station_attach"><span class=SpellE>et_station_<span
class=GramE>attach</span></span></a>(et_sys_id id, <span class=SpellE>et_stat_id</span>
<span class=SpellE>stat_id</span>, <span class=SpellE>et_att_id</span> *<span
class=SpellE>att</span>)</em>. This routine returns a unique attachment number,
<span class=SpellE><em>att</em></span>, by which a process identifies itself in
certain function calls. For example, when reading and writing events, this
parameter is required. In this manner, a single process can attach to different
stations and yet be differentiated by the ET system. With this type of
interface, for example, a user could conceivably have multiple threads with
each attached to the same station on a different attachment. The idea is that
this id represents a single attachment to a single station. This attachment id
is also a way of specifying the ownership of an event - which is important in
setting limits on how and where events can flow.</p>

<p>To detach from a station call <em><a
href="user_routines.htm#et_station_detach"><span class=SpellE>et_station_<span
class=GramE>detach</span></span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>)</em>. If a user is the last one to detach from a
station, all of the events left in the station's input list are passed to the
output list. In addition, after a user detaches, a search is made for any
events that were read but not written back into the ET system by <em>att</em>.
They are recovered and placed according to the station's property set by the
function <span class=SpellE><em>et_station_config_setrestore</em></span>.</p>

<h3><a name=Changing><span style='mso-fareast-font-family:"Times New Roman"'>Changing
a Station's</span></a><span style='mso-fareast-font-family:"Times New Roman"'>
Behavior on the Fly<o:p></o:p></span></h3>

<p>Some of the parameters that define a station's behavior as well as its
position in the linked list of stations may be modified while an ET system is
operating. The only thing that cannot be done is to load new user-defined event
selection functions or to change the select mode of the station. </p>

<p>The functions used to SET station parameters are listed below along with an
explanation for each: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setposition"><span class=SpellE><em>et_station_<span
class=GramE>setposition</span></em></span></a>(et_sys_id id, <span
class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int position,
int <span class=SpellE>pposition</span>) : setting <em>position</em> to a
positive integer places the station at that position in the linked list of active
and idle stations. The position of 0 is prohibited as the first position is
reserved for GRAND_CENTRAL station. Set <span class=SpellE>pposition</span> to
the desired place among a single group of parallel stations if it is a parallel
station, but it may not be 0 (head spot) if a head parallel station already
exists.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setblock"><span class=SpellE><em>et_station_<span
class=GramE>setblock</span></em></span></a>(et_sys_id id, <span class=SpellE>et_stat_id</span>
<span class=SpellE>stat_id</span>, int <span class=SpellE>val</span>) : setting
<span class=SpellE><em>val</em></span> to ET_STATION_BLOCKING makes the station
block by looking at all events in the system, while setting it to
ET_STATION_NONBLOCKING allows the station to fill up a cue of events and when
that is full, events flow to the next station downstream.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setcue"><span class=SpellE><em>et_station_setcue</em></span></a>(et_sys_id
id, <span class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int
<span class=SpellE>val</span>) : when in <span class=SpellE>nonblocking</span>
mode, this sets the maximum number of events that are to be in the station's
input list ready for reading (in so far as it is possible).<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setprescale"><span class=SpellE><em>et_station_<span
class=GramE>setprescale</span></em></span></a>(et_sys_id id, <span
class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int <span
class=SpellE>val</span>) : when in blocking mode, every Nth event of interest
is sent to the user by setting the <span class=SpellE><em>val</em></span> to N.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setuser"><span class=SpellE><em>et_station_setuser</em></span></a>(et_sys_id
id, <span class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int
<span class=SpellE>val</span>) : setting <span class=SpellE><em>val</em></span>
to ET_STATION_USER_SINGLE allows only one user process to attach to this
station, while setting it to ET_STATION_USER_MULTI allows multiple users to
attach. Setting it to a positive integer allows only that number of attachments
to the station.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setrestore"><span class=SpellE><em>et_station_setrestore</em></span></a>(et_sys_id
id, <span class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int
<span class=SpellE>val</span>) : when a process dies or detaches from a
station, the events it read but did not write are recovered and sent to a
station's output list if <span class=SpellE><em>val</em></span> is set to
ET_STATION_RESTORE_OUT. Similarly, it can be sent to the input list with
ET_STATION_RESTORE_IN or back to <span class=SpellE>grandcentral</span> station
with ET_STATION_RESTORE_GC.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setselectwords"><span class=SpellE><em>et_station_<span
class=GramE>setselectwords</span></em></span></a>(et_sys_id id, <span
class=SpellE>et_stat_id</span> <span class=SpellE>stat_id</span>, int *<span
class=SpellE>val</span>) : the argument is an array of integers used when the
station select mode is set to ET_STATION_SELECT_MATCH or possibly
ET_STATION_SELECT_USER (depending on what algorithm a user-defined, event
selection routine uses). For DD users, it is identical to the old
&quot;p2ctl&quot; element of the old &quot;<span class=SpellE>fmode</span>&quot;
structure.<o:p></o:p></span></p>

<p>Similar functions to those mentioned above are available to GET the values
associated with a station's configuration. Note that none of the above
functions are allowed to modify GRAND_CENTRAL station.</p>

<h3><a name=Handling><span style='mso-fareast-font-family:"Times New Roman"'>Handling
Events</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>After opening an ET system, creating a station, and attaching to it, users
are ready to start creating, reading and writing events.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Creating<o:p></o:p></span></h4>

<p>When creating <span class=GramE>an</span> new event, users are called
producers. There are two routines that can be used for doing this. The first is
for getting a single, blank event by calling <a
href="user_routines.htm#et_event_new"><span class=SpellE>e<em>t_event_<span
class=GramE>new</span></em></span></a><em>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> **<span
class=SpellE>pe</span>, int wait, <span class=SpellE>struct</span> <span
class=SpellE>timespec</span> *time, int size)</em>. At this point users are
familiar with the first two arguments <em>id</em>, and <em>att</em>. The third
is a pointer to a pointer to an event. In the code, declare a pointer to an
event (i.e. <span class=SpellE>et_event</span> *<span class=SpellE>pe</span>)
and pass its address. Upon a successful return, <span class=SpellE><em>pe</em></span>
points to a new event. The fourth <span class=SpellE>arg</span>, <em>wait</em>,
is a flag that can be set by using some predefined macros. By setting this <em>wait</em>
to ET_SLEEP, the call will block until the next free event is available. By
setting it to ET_ASYNC, the call returns immediately with a status. And by
setting it to ET_TIMED, the call waits for the amount of time given by the <em>time</em>
<span class=SpellE>arg</span> if no events are immediately available. Be warned
that the time specified with ET_TIMED mode is a minimum. First, read access to
a station's input list must be obtained and that could take some additional
time. Finally, the last <span class=SpellE>arg</span> is the requested size in
bytes. If the size is larger than those the system was created with, the newly
created event will be declared a special &quot;temporary&quot; event and will
allocate the necessary memory. (This, of course, slows things down).</p>

<p>Similarly the user can call <em><a href="user_routines.htm#et_events_new"><span
class=SpellE>et_events_<span class=GramE>new</span></span></a>(et_sys_id id, <span
class=SpellE>et_att_id</span> <span class=SpellE>att</span>, <span
class=SpellE>et_event</span> *<span class=SpellE>pe</span>[], int wait, <span
class=SpellE>struct</span> <span class=SpellE>timespec</span> *time, int size,
int num, int *<span class=SpellE>nread</span>)</em> for obtaining an array of
new events. In this case, <span class=SpellE><em>pe</em></span> is an array of
pointers to events, <em>num</em> is the number of events desired, and <span
class=SpellE><em>nread</em></span> is the number of events actually read and
placed into the array (which may be less than what was asked for).</p>

<p>Finally, the user can call <em><span style='color:blue;font-style:normal;
mso-bidi-font-style:italic'><a href="user_routines.htm#et_events_new_group"><span
class=SpellE><i style='mso-bidi-font-style:normal'>et_events_new_<span
class=GramE>group</span></i></span></a></span><span style='color:blue'>(</span>et_sys_id
id, <span class=SpellE>et_att_id</span> <span class=SpellE>att</span>, <span
class=SpellE>et_event</span> *<span class=SpellE>pe</span>[], int wait, <span
class=SpellE>struct</span> <span class=SpellE>timespec</span> *time, int size,
int num, int group, int *<span class=SpellE>nread</span>)</em><span
style='mso-fareast-font-family:"Times New Roman"'>. This is similar to <span
class=SpellE><i style='mso-bidi-font-style:normal'>et_events_new</i></span>
with the exception that only events of the specified event group will be read.
There are situations in which several producers need to grab and fill new
events. In order to prevent a single producer from grabbing too many events and
slowing down or stopping other producers, events in an <span class=GramE>et</span>
system may be divided into groups. If each producer uses this function with a
different group number, none will be starved for events. To get only 1 event
from a group, call <i style='mso-bidi-font-style:normal'><a
href="user_routines.htm#et_event_new_group"><span class=SpellE>et_event_new_group</span></a></i>.
An alternative to using these two functions for getting new events of a
specific group is to call the function <i style='mso-bidi-font-style:normal'><a
href="user_routines.htm#et_system_setgroup"><span class=SpellE>et_system_<span
class=GramE>setgroup</span></span></a></i></span><i style='mso-bidi-font-style:
normal'>(</i><i style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:
"Times New Roman"'>et_sys_id id, int group)</span></i><span style='mso-fareast-font-family:
"Times New Roman"'> which will set a default group to retrieve events from. Any
subsequent calls to <span class=SpellE><i style='mso-bidi-font-style:normal'>et_event</i></span><i
style='mso-bidi-font-style:normal'>(s<span class=GramE>)_</span>new</i> will
only retrieve events from the default group. <span class=GramE>Using <span
class=SpellE><i style='mso-bidi-font-style:normal'>et_system_setgroup</i></span><i
style='mso-bidi-font-style:normal'> </i>to set the group to 0 resets things so
events are retrieved from all groups.</span></span></p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Reading<o:p></o:p></span></h4>

<p>When reading events, users are called consumers. There are two routines that
can be used for reading. The first is for reading single events and has the
form <em><a href="user_routines.htm#et_event_get"><span class=SpellE>et_event_<span
class=GramE>get</span></span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> **<span
class=SpellE>pe</span>, int wait, <span class=SpellE>struct</span> <span
class=SpellE>timespec</span> *time)</em>. The arguments are the same as those
for creating a new event but without the size.</p>

<p>The second type of routine is for reading an array of events by using the
call, <em><a href="user_routines.htm#et_events_get"><span class=SpellE>et_events_<span
class=GramE>get</span></span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> **<span
class=SpellE>pe</span>, int wait, <span class=SpellE>struct</span> <span
class=SpellE>timespec</span> *time, int num, int *<span class=SpellE>nread</span>)</em>.
The arguments are almost the same as for reading single events with the
exception that the user passes an array of pointers to events. There are also
additional arguments specifying the number of events the user wants to read and
the number actually read. Although <span class=GramE>less</span> events may be
returned, the user will never get more than the amount asked for.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Writing<o:p></o:p></span></h4>

<p>After reading an event, the user has access to a number of its properties
for manipulation. Routines to accomplish this are given in the following list: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setpriority"><span class=SpellE>et_event_<span
class=GramE>setpriority</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int <span class=SpellE>pri</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this routine sets the
priority of an event, <span class=SpellE><em>pri</em></span>, to be ET_HIGH or
ET_LOW (default). A high priority means that such an event gets placed below
other high priority but above low priority events when placed in a station's
input or output list. Thus, high priority events are always the first to be
read. No other guarantees are made.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getpriority"><span class=SpellE>et_event_<span
class=GramE>getpriority</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int *<span class=SpellE>pri</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this routine returns the
priority of an event.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setlength"><span class=SpellE>et_event_<span
class=GramE>setlength</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int <span class=SpellE>len</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : sets the length or size of
the event's data in bytes. This may not be larger than the total amount of
memory available.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getlength"><span class=SpellE>et_event_<span
class=GramE>getlength</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int *<span class=SpellE>len</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : returns the length of the
event's data in bytes.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setcontrol"><span class=SpellE>et_event_<span
class=GramE>setcontrol</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int con[], int num)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : sets the control information of an event. The <em>con</em>
argument is an array of integers which control the flow of the event through
the ET system, and the <em>num</em> argument gives the size of the array. The
DD system had ctlw1, ctlb1, ctlw2, and ctlb2 as four integers used to carry
this information. These integers are now replaced respectively by an array of
integers. The size of this array is determined at compile time by
ET_STATION_SELECT_INTS which <span class=SpellE>defaluts</span> to four<span
class=GramE>..</span><o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getcontrol"><span class=SpellE>et_event_<span
class=GramE>getcontrol</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int con[])</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : gets the event's array of control information.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getdata"><span class=SpellE>et_event_<span
class=GramE>getdata</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, void **data)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this routine returns a void pointer to the start of an
event's data location.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getdatastatus"><span class=SpellE>et_event_<span
class=GramE>getdatastatus</span></span></a>(<span class=SpellE>et_event</span>
*<span class=SpellE>pe</span>, int *status)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this routine gets the status of an event's data. It can
be either ET_DATA_OK, ET_DATA_CORRUPT (not currently used), or
ET_DATA_POSSIBLY_CORRUPT. Data is ET_DATA_OK unless a previous user got the
event from the system and then exited or crashed without putting it back. If
the ET system recovers that event and puts it back into the system, its status
becomes ET_DATA_POSSIBLY_CORRUPT as a warning to others.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setendian"><span class=SpellE>et_event_<span
class=GramE>setendian</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int <span class=SpellE>endian</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : though normally the ET
system automatically keeps track of the <span class=SpellE>endianness</span> of
an event's data, this routine can override and directly set the <span
class=SpellE>endian</span> value of the data. It may be ET_ENDIAN_BIG,
ET_ENDIAN_LITTLE, ET_ENDIAN_LOCAL (same <span class=SpellE>endian</span> as
local host), ET_ENDIAN_NOTLOCAL (opposite <span class=SpellE>endian</span> as
local host), or ET_ENDIAN_SWITCH. See the chapter <a href="remote_et.htm">Remote
ET</a>.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getendian"><span class=SpellE>et_event_<span
class=GramE>getendian</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int *<span class=SpellE>endian</span>)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this routine returns the <span
class=SpellE>endian</span> of an event's data - either ET_ENDIAN_BIG or
ET_ENDIAN_LITTLE. See the chapter Remote ET.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_needtoswap"><span class=SpellE>et_event_<span
class=GramE>needtoswap</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>, int *swap)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this routine tells the caller if an event's data needs to
be swapped or not by returning either ET_SWAP or ET_NOSWAP. See the chapter
Remote ET.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_CODAswap"><span class=SpellE>et_event_<span
class=GramE>CODAswap</span></span></a>(<span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine swaps the data of an event in CODA format.<o:p></o:p></span></p>

<p>After setting an event's priority, data length, control array and perhaps
its <span class=SpellE>endian</span> value, and writing data, the user is
finished with the event and wishes to place it into the ET system. Or perhaps
the user has only read the data and is done with the event. In any case, the
event must be written back into the system by two possible means. Either write
a single event with <em><a href="user_routines.htm#et_event_put"><span
class=SpellE>et_event_<span class=GramE>put</span></span></a>(et_sys_id id, <span
class=SpellE>et_att_id</span> <span class=SpellE>att</span>, <span
class=SpellE>et_event</span> *<span class=SpellE>pe</span>)</em> or write
multiple events with <em><a href="user_routines.htm#et_events_put"><span
class=SpellE>et_events_put</span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>[], int num)</em>. In the latter case, the user gives the
number, <em>num</em>, of events to put back in the array <span class=SpellE><em>pe</em></span>.
All events will always be successfully written and will never block as a
station's output list has enough room for all events in the whole ET system.</p>

<p>The ET system checks to see if the <span class=SpellE><em>att</em></span>
that read the event is the same one that is writing it. If it isn't, the call
returns an error and nothing is written.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Dumping<o:p></o:p></span></h4>

<p>After reading existing events or creating new ones, it's possible that these
events may no longer be of interest to the user or any other user on the
system. In that case, one may dump or recycle these events by calls to two
routines. They are identical to the routines <span class=SpellE><em>et_event</em></span><em>(s<span
class=GramE>)_</span>put</em> in their arguments. The first is <em><a
href="user_routines.htm#et_event_dump"><span class=SpellE>et_event_<span
class=GramE>dump</span></span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>)</em> and dumps a single event. Similarly,<span
class=GramE>&nbsp; </span><em><a href="user_routines.htm#et_events_dump"><span
class=SpellE>et_events_dump</span></a>(et_sys_id id, <span class=SpellE>et_att_id</span>
<span class=SpellE>att</span>, <span class=SpellE>et_event</span> *<span
class=SpellE>pe</span>[], int num)</em> dumps multiple events.</p>

<h3><a name=Closing><span style='mso-fareast-font-family:"Times New Roman"'>Closing
an ET System</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>When finished using an ET system, it can be removed from a process' memory
by using the <em><a href="user_routines.htm#et_close"><span class=SpellE>et_<span
class=GramE>close</span></span></a>(et_sys_id id)</em> routine. This <span
class=SpellE>unmaps</span> the ET system memory from the process and makes it
inaccessible. It also stops the heartbeat and system-heartbeat-monitor threads.
In order to close, all attachments must be detached first. However, there is another
function <em><a href="user_routines.htm#et_forcedclose"><span class=SpellE>et_<span
class=GramE>forcedclose</span></span></a>(et_sys_id id)</em> which will
automatically do all the detaching first. Of course, the ET system continues to
function for other processes as before.</p>

<p><a href="creating_system.htm"><span style='mso-no-proof:yes;text-decoration:
none;text-underline:none'><img border=0 width=31 height=31 id="_x0000_i1026"
src=left.gif alt=Previous></span></a><a href="programming_details.htm"><span
style='mso-no-proof:yes;text-decoration:none;text-underline:none'><img
border=0 width=31 height=31 id="_x0000_i1025" src=right.gif alt=Next></span></a></p>

</div>

</body>

</html>
